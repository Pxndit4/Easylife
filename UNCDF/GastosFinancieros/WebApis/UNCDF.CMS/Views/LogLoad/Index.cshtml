@model UNCDF.CMS.Models.SearchLogLoadViewModel
@{
    ViewBag.Title = "Log Load";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="ui-bar ui-bar-default">
    <span class="ui-title">
        Log Load
    </span>
    <div class="ui-btn-content">
    </div>
</div>

<div class="collapse ui-error-view" id="panMessage">
</div>


<div class="ui-container ui-jumb">

    @using (Html.BeginForm("Search", "Donor", FormMethod.Post, new { id = "frmSearchLoad" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(m => m.StartDate)
                    <div id="d_@Html.IdFor(m=>m.StartDate)" class="input-group date">
                        @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control input", maxlength = 10, id = "txtStartDate" })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(m => m.EndDate)
                    <div id="d_@Html.IdFor(m=>m.EndDate)" class="input-group date">
                        @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control input", maxlength = 10, id = "txtEndDate" })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>

                <div class="col-md-2">
                    @Html.LabelFor(m => m.TypeParamId)

                    <div class="input-group">
                        @Html.DropDownListFor(m => m.TypeParamId, (IEnumerable<SelectListItem>)ViewBag.Loads, new { @class = "form-control", id = "txtTypeParamId" })

                        <a id="btnSearch" class="btn btn-default input-group-addon">
                            <span class="glyphicon glyphicon-search" aria-hidden="true"></span> Search
                        </a>
                    </div>
                </div>

                

                <div class="col-md-1">
                    <a id="btnClean" class="btn btn-default" style="margin-top:22px;">
                        <span class="glyphicon glyphicon-refresh" aria-hidden="true"></span> Clean
                    </a>
                </div>
            </div>
        </div>
        <div>
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        </div>
    }
</div>

<div class="ui-container">
    <div class="bars pull-left" style="font-weight: bold;margin-top: 15px;">
        <span class="title">
            Logs List
        </span>
        <span class="ui-grid-rows" data-info-grid="#tbListD" data-info="@MessageResource.GridRowCountInfo"></span>
    </div>
    <table id="tbListD" class="table table-hover" data-toggle="table" data-toolbar=".toolbar" data-pagination="true" data-search="true" data-row-style="rowStyle" data-sort-name="@Html.HtmlIdNameFor(x => x.Result.LogloadId)" data-sort-order="desc">
        <thead>
            <tr>
                <th class="col-md-2" data-field="@Html.HtmlIdNameFor(x => x.Result.LogloadId)"  data-visible="false">@Html.DisplayNameFor(x => x.Result.LogloadId)</th>
                <th class="col-md-2" data-field="@Html.HtmlIdNameFor(x => x.Result.DescriptionParam)">@Html.DisplayNameFor(x => x.Result.DescriptionParam)</th>
                <th class="col-md-1" data-field="@Html.HtmlIdNameFor(x => x.Result.NameUser)">@Html.DisplayNameFor(x => x.Result.NameUser)</th>
                <th class="col-md-2" data-field="@Html.HtmlIdNameFor(x => x.Result.LoadingDate)">@Html.DisplayNameFor(x => x.Result.LoadingDate)</th>
                <th class="col-md-1" data-field="@Html.HtmlIdNameFor(x => x.Result.Total)">@Html.DisplayNameFor(x => x.Result.Total)</th>
                <th class="col-md-2" data-field="@Html.HtmlIdNameFor(x => x.Result.TotalCorrectRecords)">@Html.DisplayNameFor(x => x.Result.TotalCorrectRecords)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.Result.TotalBadRecords)">@Html.DisplayNameFor(x => x.Result.TotalBadRecords)</th>
            </tr>
        </thead>

    </table>
</div>


<script type="text/javascript" language="javacript">
    $("#btnClean").on("click", function (e) {
        e.preventDefault();
        $("#txtStartDate").val("");
        $("#txtEndDate").val("");
        $("#txtTypeParamId").val("-1");
        $("#btnSearch").click();
    });

    function rebindGrid() {
        $("#btnSearch").click();
    }

    $('#dialogMain').on('hidden.bs.modal', function () {
        rebindGrid()
    });

    var objIndexLoad={
        initial: function (){
            $("#btnSearch").on("click", function (e) {
                e.preventDefault();
                objIndexLoad.grid.load();
            });

            unitlife.ui.grid('#tbListD').create({ rowStyle: 'unitlife.ui.grid.global.rowState.sinEstado',search: true, toolbar: ".ui-container .title, .ui-container .ui-grid-rows" });
            objIndexLoad.grid.load();
        },
        grid:{
            get:function(){
                return unitlife.ui.grid("#tbListD");
            },
            load: function () {

                unitlife.ui.grid('#tbListD').load('@Url.Action("Search", "LogLoad", null)', '#frmSearchLoad');
            },
            rowCommand:{

            },
        },
        general:{
        }
    };

    $(document).ready(function () {
        objIndexLoad.initial();
        rebindGrid();

        var $th = $('.tableFixHead').find('thead th')
        $('.tableFixHead').on('scroll', function () {
            $th.css('transform', 'translateY(' + this.scrollTop + 'px)');
        });
        $('.fixed-table-body').addClass('tableFixHead');


        $('#d_@Html.IdFor(m => m.StartDate)').datepicker();
        $('#d_@Html.IdFor(m => m.EndDate)').datepicker();

        unitlife.ui.SelectedValue('#@Html.IdFor(x => x.TypeParamId)');

    });

</script>



