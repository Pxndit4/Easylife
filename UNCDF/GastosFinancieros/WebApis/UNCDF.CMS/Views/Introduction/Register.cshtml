@model UNCDF.CMS.Models.IntroductionViewModel

@{
    Layout = null;
}
@Html.Hidden("viewTitle", ViewBag.Title as string)

<div class="ui-bar ui-bar-default">
    <div class="ui-btn-content">
        <button type="submit" id="btnRegSubm" class="btn btn-default">
            <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>Save
        </button>
    </div>
</div>

<div class="ui-container">
    @using (Html.BeginForm("Register", "Introduction", FormMethod.Post, new { id = "frmIntroductionReg", enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(m => m.IntroductionId)
        @Html.Hidden("OldStatus", Model.Status)
        @Html.AntiForgeryToken()
        <div class="form-group">
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(m => m.Title)
                    @Html.TextBoxFor(m => m.Title, new { @class = "form-control", maxlength = 255 })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(m => m.Description)
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control", maxlength = 450 })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-md-6">
                    @Html.LabelFor(m => m.Image)
                    <div class="input-group">
                        @Html.TextBoxFor(m => m.Image, new { @class = "form-control", @readonly = "readonly" })
                        <a id="btnAddFile" class="btn btn-default input-group-addon" onclick="document.getElementById('imageFile').click();">
                            <span class="glyphicon glyphicon-open" aria-hidden="true"></span>
                        </a>
                        <input type="file" id="imageFile" style="display: none" />
                    </div>

                </div>
                @if (Model.ImageLink.Length > 0)
                {
                    <div class="col-md-1">
                        <a id="btnImage" class="btn btn-default" style="margin-top:22px;" title="View"><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span></a>
                    </div>
                }
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-1">
                            @Html.LabelFor(m => m.Order)
                            @if (Model.IntroductionId == 0 || Model.Status == 0)
                            {
                                @Html.TextBoxFor(m => m.Order, new { @class = "form-control", maxlength = 2, @readonly = true })
                            }
                            else
                            {
                                @Html.TextBoxFor(m => m.Order, new { @class = "form-control", maxlength = 2 })
                            }
                            @*@Html.DropDownListFor(m => m.Order, (IEnumerable<SelectListItem>)ViewBag.Order, new { @class = "form-control", data_value = Model.Order })*@
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <div class="form-group">
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.Status)
                    @Html.DropDownListFor(m => m.Status, (IEnumerable<SelectListItem>)ViewBag.Estado, new { @class = "form-control", data_value = Model.Status })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">

            </div>
        </div>
        <div>
            Required fields.<span class="input-validation-error-ley"></span>
        </div>
    }

</div>

<script type="text/javascript" language="javacript">
    var sizeIMAGE;
    var msgConf = '';
    var countActives = 0;

    function iniForm() {

        unitlife.ajax.getJson('@Url.Action("getParameter", "Parameter")/?code=' + 'PHOTO+' + '&description=' + 'Size', function (data) {
            sizeIMAGE = data.data.Valor1;
        });
    }

    function onCallbackError(e) {
        unitlife.ui.DropDownListFillJsonError(e, s);
    }
    document.getElementById('imageFile').onchange = function () {
         var FileSize = document.getElementById('imageFile').files[0].size / 1024 / 1024;
         var nameFile = document.getElementById('imageFile').files[0].name;
         var fileInput = document.getElementById('imageFile');
         var filePath = fileInput.value;
        var allowedExtensions = /(.jpg|.jpeg|.png|.jfif|.gif)$/i;
        var fSizeIm = sizeIMAGE;


         if (!allowedExtensions.exec(filePath)) {
             unitlife.ui.validation.showMessage("Please upload file having extensions .jpeg/.jpg/.png/.gif/.jfif only.");
             $("#@Html.IdFor(m => m.Image)").val("");
             return false;
        }

        if (FileSize > fSizeIm) {
                 unitlife.ui.validation.showMessage("The file size should not exceed " + fSizeIm + " MB");
                $("#@Html.IdFor(m => m.Image)").val("");
                return false;
        }

         $("#@Html.IdFor(m => m.Image)").val(nameFile);

     }

    $(document).ready(function () {
        iniForm();

        $("#btnImage").on("click", function (e) {
            window.open('@Model.ImageLink' +'?nocache=' + (new Date()).getTime(), '_blank');
            return false;
        });


        $("#btnRegSubm").on("click", function (e) {

            e.preventDefault();


            if ($("#@Html.IdFor(m => m.Order)").val() < 1){
                unitlife.ui.validation.showMessage("The Order field must be greater than 0");
                return false;
            }

            var _frm = unitlife.ui.validation("#frmIntroductionReg"), condVal = $("#@Html.IdFor(m => m.IntroductionId)").val();
            var _isValid = true;


            _frm.unobtrusiveParse();
            if (condVal == '01') {
                _isValid = _frm.validGroup(condVal, '01',
                    [
                        "#@Html.IdFor(m => m.Title)"
                    ]);
            }
            else {
                _isValid = _frm.valid();
            }

            if (_isValid) {
                unitlife.ajax.getJson('@Url.Action("Search", "Introduction")/?Status=1', function (data) {

                    var cant = Object.keys(data.data).length;
                    countActives = cant;



                    var oldStatus = $("#OldStatus").val();
                    var Status = $("#@Html.IdFor(m => m.Status)").val();
                    var IntrId = $("#@Html.IdFor(m => m.IntroductionId)").val();

                    if (IntrId != 0 && oldStatus == 0 && Status == 1 && countActives == 3) {
                        unitlife.ui.validation.showMessage("Adding more than 3 active records is not allowed");
                        return false;
                    }


                    if (IntrId == 0 && countActives == 3) {
                        msgConf = 'It will be recorded as INACTIVE because only 3 Introductions are allowed. Do you want to continue?';
                        $("#@Html.IdFor(m => m.Status)").val(0);
                    }else {
                        msgConf = '¿@Html.Raw(ViewBag.Confirm)?';
                    }

                    Confirmar(
                    msgConf,
                        function () {

                            var form = $("#frmIntroductionReg");
                            var data = new FormData();
                            var files = $("#imageFile").get(0).files;

                            if (files.length > 0) {
                                data.append("imageFile", files[0]);
                            }

                            $.each(form.serializeArray(), function (key, input) {
                                data.append(input.name, input.value);
                            });

                            unitlife.ajax.submitAddFiles('@Url.Action("Register", "Introduction")', data);
                            unitlife.site.dialog.invoqResultCallback('REG_INTRODUCTION');

                    },
                    null
                    );

                  }, null);
            }
            return false;
        });

        unitlife.ui.SelectedValue('#@Html.IdFor(x => x.Status)');



    });

</script>

