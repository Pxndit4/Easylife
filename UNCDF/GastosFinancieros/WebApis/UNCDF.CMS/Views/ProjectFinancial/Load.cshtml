@model UNCDF.CMS.Models.LoadProjectFinancialsViewModel

@{
    Layout = null;
}
@Html.Hidden("viewTitle", ViewBag.Title as string)



<div class="ui-bar ui-bar-default">
    <div class="ui-btn-content">
        <button type="submit" id="btnRegSaveError" disabled="disabled" class="btn btn-default">
            <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>
            Upload Without Errors
        </button>
        <button type="submit" id="btnRegSave" disabled="disabled" class="btn btn-default">
            <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>
            Upload
        </button>
    </div>
</div>

<div class="ui-container">
    @using (Html.BeginForm("Load", "ProjectFinancial", FormMethod.Post, new { id = "frmLoadReg", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-group">
            <input type="hidden" id="hfWarnning" name="hfWarnning" value="N">
            <div class="row">
                <div class="col-md-12">
                    @*@Html.LabelFor(m => m.File)*@
                    <div class="input-group">
                        @Html.TextBoxFor(m => m.File, new { @class = "form-control", @readonly = "readonly" })
                        <a id="btnAddFile" class="btn btn-default input-group-addon" onclick="document.getElementById('imageFile').click();">
                            <span class="glyphicon glyphicon-open" aria-hidden="true"></span>
                        </a>
                        <input type="file" id="imageFile" style="display: none" />
                    </div>
                </div>

            </div>

        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-sm-3">
                    @Html.LabelFor(m => m.Total)
                    @Html.TextBoxFor(m => m.Total, new { @class = "form-control", @readonly = "readonly" })
                </div>
                <div class="col-sm-3">
                    @Html.LabelFor(m => m.TotalCorrectRecords)
                    @Html.TextBoxFor(m => m.TotalCorrectRecords, new { @class = "form-control", @readonly = "readonly" })
                </div>
                <div class="col-sm-3">
                    @Html.LabelFor(m => m.TotalBadRecords)
                    @Html.TextBoxFor(m => m.TotalBadRecords, new { @class = "form-control", @readonly = "readonly" })
                </div>

            </div>
        </div>
        <div>
            Required fields.<span class="input-validation-error-ley"></span>
        </div>
    }
</div>

<div id="tbListCont52" class="ui-container">
    @*<span class="title">
        Previus
    </span>*@
    
    <table id="tbLisPreviusPF" class="table table-hover" data-toggle="table" data-toolbar=".toolbar" data-pagination="true" data-sort-name="@Html.HtmlIdNameFor(x => x.resulLoad.Year)" data-sort-order="asc" data-search="true" data-row-style="rowStyle">
        <thead>
            <tr>
                <th data-class="ui-cell-icon" data-formatter="objIndexLoadPF.grid.commandAlert" data-events="objIndexLoadPF.grid.rowCommand"></th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.Year)">@Html.DisplayNameFor(x => x.resulLoad.Year)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.OperUnit)">@Html.DisplayNameFor(x => x.resulLoad.OperUnit)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.DeparmentCode)">@Html.DisplayNameFor(x => x.resulLoad.DeparmentCode)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.ProjectCode)">@Html.DisplayNameFor(x => x.resulLoad.ProjectCode)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.DescrProject)">@Html.DisplayNameFor(x => x.resulLoad.DescrProject)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.ProjectManager)">@Html.DisplayNameFor(x => x.resulLoad.ProjectManager)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.ImplementAgencyCode)">@Html.DisplayNameFor(x => x.resulLoad.ImplementAgencyCode)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.ShortDesc)">@Html.DisplayNameFor(x => x.resulLoad.ShortDesc)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.FundCode)">@Html.DisplayNameFor(x => x.resulLoad.FundCode)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.DescrFund)">@Html.DisplayNameFor(x => x.resulLoad.DescrFund)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.Budget)">@Html.DisplayNameFor(x => x.resulLoad.Budget)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.PreEncumbrance)">@Html.DisplayNameFor(x => x.resulLoad.PreEncumbrance)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.Encumbrance)">@Html.DisplayNameFor(x => x.resulLoad.Encumbrance)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.Disbursement)">@Html.DisplayNameFor(x => x.resulLoad.Disbursement)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.Expenditure)">@Html.DisplayNameFor(x => x.resulLoad.Expenditure)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.Balance)">@Html.DisplayNameFor(x => x.resulLoad.Balance)</th>
                <th data-field="@Html.HtmlIdNameFor(x => x.resulLoad.Spent)">@Html.DisplayNameFor(x => x.resulLoad.Spent)</th>
            </tr>
        </thead>

    </table>
</div>

<script type="text/javascript" language="javacript">

    document.getElementById('imageFile').onchange = function () {
        var nameFile = document.getElementById('imageFile').files[0].name;
        var fileInput = document.getElementById('imageFile');
        var filePath = fileInput.value;
        var allowedExtensions = /(.xlsx)$/i;

        $("#@Html.IdFor(m => m.File)").val(nameFile);

        if (!allowedExtensions.exec(filePath)) {
            unitlife.ui.validation.showMessage("Please upload file having extensions .xlsx/ only.");
            $("#@Html.IdFor(m => m.File)").val("");
            return false;
        }

        var _grid = unitlife.ui.grid("#tbLisPreviusPF");
        var _frm = unitlife.ui.validation("#frmLoadReg"); @* condVal = $("#@Html.IdFor(m => m.TimeLineId)").val();*@
        var _isValid = true;

        _frm.unobtrusiveParse();

        _isValid = _frm.valid();

        if (_isValid) {
            var form = $("#frmLoadReg");
            var data = new FormData();
            var files = $("#imageFile").get(0).files;

            if (files.length > 0) {
                data.append("imageFile", files[0]);
            }

            $.each(form.serializeArray(), function (key, input) {
                data.append(input.name, input.value);
            });

            $("#btnRegSave").prop("disabled", false);
            $("#btnRegSaveError").prop("disabled", false);

            unitlife.ui.grid('#tbLisPreviusPF').loadFile('@Url.Action("LoadFile", "ProjectFinancial", null)', data,
             function (e) {
                var dataGrid = e.data;

                if (dataGrid.length > 0) {
                    var obj = dataGrid[0];

                    $("#@Html.IdFor(m => m.Total)").val(obj.Total);
                    $("#@Html.IdFor(m => m.TotalBadRecords)").val(obj.TotalBadRecords);
                    $("#@Html.IdFor(m => m.TotalCorrectRecords)").val(obj.TotalCorrectRecords);

                    }
                }
            );

        }
        event.target.value = '';
     }

    @*function downloadFile()
    {
        window.location = '@Url.Action("Download", "ProjectFinancials")/' + @Model.ProjectId + '@Url.TargetParam()';
    }*@

    var objIndexLoadPF={
        initial: function () {

            unitlife.ui.grid('#tbLisPreviusPF').create({ search: true, toolbar: ".ui-container .title, .ui-container .ui-grid-rows" });
            objIndexLoadPF.grid.load();
        },
        grid:{
            get:function(){
                return unitlife.ui.grid("#tbLisPreviusPF");
            },
            load: function () {
                unitlife.ui.grid('#tbLisPreviusPF').load('@Url.Action("SearchLoad", "ProjectFinancial", null)', '#frmLoadReg', null,
                    function (e) {

                });

                $('[data-toggle="tooltip"]').tooltip();
                $('[data-toggle="popover"]').popover();
                $('#tbLisPreviusPF').on('all.bs.table', function (e, name, args) {
                    $('[data-toggle="tooltip"]').tooltip();
                    $('[data-toggle="popover"]').popover();
                });



            },
            commandAlert: function (e, r, i) {

                //var sd = '<a href="#" data-toggle="popover" title="توضیحات کاربر ارشد" data-content="Description" data-trigger="hover"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></a>';
                var sd = '<span class="glyphicon glyphicon-warning-sign" data-toggle="popover" data-html="true" Title="Warning" data-content="';
                sd = sd + r.@Html.HtmlIdNameFor(x => x.resulLoad.AlertMessage) + '" data-trigger="hover" aria-hidden="true"></span>';
                var desc = r.@Html.HtmlIdNameFor(x => x.resulLoad.WithAlert);

                if (desc == 'N') {
                    sd = '';
                } else {
                    $("#btnRegSave").prop("disabled", true);
                }

                return sd;

            },
            commandFormartDecimal: function (e, r, i) {
                //var sd = r.Amount+"sdad";
                var sd = unitlife.numeric.formatDecimal(e,0)
                return sd;
            },
            rowCommand:{
            }
        },
        general:{
        }
    };


    $(document).ready(function () {

        $('[data-toggle="popover"]').popover();


        $("#btnRegSaveError").on("click", function (e) {
            e.preventDefault();
            var _frm = unitlife.ui.validation("#frmLoadReg");
            var _isValid = true;
            _frm.unobtrusiveParse();

            _isValid = _frm.valid();
            if (_isValid) {

               unitlife.ajax.getJson('@Url.Action("GetProjectFinancialValidYear", "ProjectFinancial")', function (data) {
                       var type = data.type;
                       var validMess = data.message;
                       var mess = '';
                        if (type == "1") {
                            mess = 'These periods are not charged because they are historical,Do you wish to continue? \n (' + validMess+ ')';
                        } else {
                            mess = '¿@Html.Raw(ViewBag.Confirm)?';
                        }

                    Confirmar(
                        mess,
                    function () {
                        unitlife.ajax.submit('@Url.Action("RegisterErrors", "ProjectFinancial", null)', "#frmLoadReg");
                        unitlife.site.dialog.invoqResultCallback('REG_PROJECTFINANCIAL');
                    },
                    null
                   );
               });
            }
            return false;
        });

        $("#btnRegSave").on("click", function (e) {
            e.preventDefault();
            var _frm = unitlife.ui.validation("#frmLoadReg");
            var _isValid = true;
            _frm.unobtrusiveParse();

            _isValid = _frm.valid();
            if (_isValid) {


                   unitlife.ajax.getJson('@Url.Action("GetProjectFinancialValidYear", "ProjectFinancial")', function (data) {
                       var type = data.type;
                       var validMess = data.message;
                       var mess = '';
                        if (type == "1") {
                            mess = 'These periods are not charged because they are historical,Do you wish to continue? \n (' + validMess+ ')';
                        } else {
                            mess = '¿@Html.Raw(ViewBag.Confirm)?';
                        }

                    Confirmar(
                        mess,
                    function () {
                        unitlife.ajax.submit('@Url.Action("Register", "ProjectFinancial", null)', "#frmLoadReg");
                        unitlife.site.dialog.invoqResultCallback('REG_PROJECTFINANCIAL');
                    },
                    null
                );

                });

            }
            return false;
        });
        objIndexLoadPF.initial();

    });


    var $th = $('.tableFixHead').find('thead th')
    $('.tableFixHead').on('scroll', function () {
        $th.css('transform', 'translateY(' + this.scrollTop + 'px)');
    });

    $('.fixed-table-body').addClass('tableFixHead');

</script>

