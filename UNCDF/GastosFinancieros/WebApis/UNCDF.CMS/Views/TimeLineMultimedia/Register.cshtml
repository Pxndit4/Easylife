@model UNCDF.CMS.Models.TimeLineMultimediaViewModel

@{
    Layout = null;
}
@Html.Hidden("viewTitle", ViewBag.Title as string)

<div class="ui-bar ui-bar-default">
    <div class="ui-btn-content">
        <button type="submit" id="btnRegSubm" class="btn btn-default">
            <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>Save
        </button>
    </div>
</div>

<div class="ui-container">
    @using (Html.BeginForm("Register", "TimeLineMultimedia", FormMethod.Post, new { id = "frmTimeLineMultimediaReg", enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(m => m.TimeLineId)
        @Html.HiddenFor(m => m.TimeLineMulId)
        @Html.AntiForgeryToken()
        <div class="form-group">
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.Type)
                    @Html.DropDownListFor(m => m.Type, (IEnumerable<SelectListItem>)ViewBag.TypeFile, new { @class = "form-control", data_value = Model.Type })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(m => m.Title)
                    @Html.TextBoxFor(m => m.Title, new { @class = "form-control", maxlength = 200 })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-md-11">
                    @Html.LabelFor(m => m.File)
                    <div class="input-group">
                        @Html.TextBoxFor(m => m.File, new { @class = "form-control", @readonly = "readonly" })
                        <a id="btnAddFile" class="btn btn-default input-group-addon" onclick="document.getElementById('imageFile').click();">
                            <span class="glyphicon glyphicon-open" aria-hidden="true"></span>
                        </a>
                        <input type="file" id="imageFile" style="display: none" />
                    </div>
                </div>
                @if (Model.FileLink.Length > 0)
                {
                    <div class="col-md-1">
                        <a id="btnImageMulti" class="btn btn-default" title="View" style="margin-top:22px;">
                            <span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span>
                        </a>
                    </div>
                }
            </div>
        </div>
        <div>
            Required fields.<span class="input-validation-error-ley"></span>
        </div>
    }

</div>

<script type="text/javascript" language="javacript">

    var sizeVideo=2;
    var sizeIMAGE;

    $("#btnImageMulti").on("click", function (e) {
            window.open('@Model.FileLink' +'?nocache=' + (new Date()).getTime(), '_blank');
            return false;
    });

    function iniFormMul() {


        unitlife.ajax.getJson('@Url.Action("getParameter", "Parameter")/?code=' + 'VIDEO+' + '&description=' + 'Size', function (data) {
            sizeVideo = data.data.Valor1;
        });


        unitlife.ajax.getJson('@Url.Action("getParameter", "Parameter")/?code=' + 'PHOTO+' + '&description=' + 'Size', function (data) {
            sizeIMAGE = data.data.Valor1;
        });


    }


    function onCallbackError(e) {
        unitlife.ui.DropDownListFillJsonError(e, s);
    }
     document.getElementById('imageFile').onchange = function () {
         var nameFile = document.getElementById('imageFile').files[0].name;
         var fileInput = document.getElementById('imageFile');

         var FileSize = document.getElementById('imageFile').files[0].size / 1024 / 1024;
         var filePath = fileInput.value;
         var allowedExtensions = /(.jpg|.jpeg|.png|.jfif|.gif)$/i;
         var allowedExtensionsVideo = /(.mp4)$/i;
         var fnSizeVi = sizeVideo;
         var fSizeIm = sizeIMAGE;


         var type = $("#@Html.IdFor(m => m.Type)").val();

         $("#@Html.IdFor(m => m.File)").val(nameFile);
         //image
         if (type == 1) {
             if (!allowedExtensions.exec(filePath)) {
                 unitlife.ui.validation.showMessage("Please upload Image having extensions .jpeg/.jpg/.png only.");
                 $("#@Html.IdFor(m => m.File)").val("");
                 return false;
             }

             if (FileSize > fSizeIm) {
                 unitlife.ui.validation.showMessage("The file size should not exceed " + fSizeIm + " MB");
                $("#@Html.IdFor(m => m.File)").val("");
                return false;
             }

         } else { //video
             if (!allowedExtensionsVideo.exec(filePath)) {
                 unitlife.ui.validation.showMessage("Please upload Image having extensions .mp4 only.");
                 $("#@Html.IdFor(m => m.File)").val("");
                 return false;
             }
             if (FileSize > fnSizeVi) {
                unitlife.ui.validation.showMessage("The file size should not exceed " + fnSizeVi + " MB");
                $("#@Html.IdFor(m => m.File)").val("");
                return false;
             }

         }

     }

    $(document).ready(function () {

        iniFormMul();

        $("#@Html.IdFor(m => m.Type)").on('change', function (e) {

            var type = this.value;
            var file = $("#@Html.IdFor(m => m.File)").val();

            var allowedExtensions = /(.jpg|.jpeg|.png|.jfif|.gif)$/i;
            var allowedExtensionsVideo = /(.mp4)$/i;


            if (type == 1)//imagen
            {
                if (!allowedExtensions.exec(file)) {
                    $("#@Html.IdFor(m => m.File)").val("");// alert('no es una imagen');
                }
            } else {


                if (!allowedExtensionsVideo.exec(file)) {
                    $("#@Html.IdFor(m => m.File)").val("");//alert('no es un video');
                }

            }

        });

        $("#btnRegSubm").on("click", function (e) {
            e.preventDefault();

            var _frm = unitlife.ui.validation("#frmTimeLineMultimediaReg"), condVal = $("#@Html.IdFor(m => m.TimeLineMulId)").val();
            var _isValid = true;
            _frm.unobtrusiveParse();
            if (condVal == '01') {
                _isValid = _frm.validGroup(condVal, '01',
                    [
                    "#@Html.IdFor(m => m.Title)",

                    ]);
            }
            else {
                _isValid = _frm.valid();
            }
            if (_isValid) {

                Confirmar(
                '¿@Html.Raw(ViewBag.Confirm)?',
                function () {

                   var form = $("#frmTimeLineMultimediaReg");
                   var data = new FormData();

                   var files = $("#imageFile").get(0).files;

                   if (files.length > 0) {
                       data.append("imageFile", files[0]);
                    }

                    $.each(form.serializeArray(), function (key, input) {
                       data.append(input.name, input.value);
                   });

                    unitlife.ajax.submitAddFiles('@Url.Action("Register", "TimeLineMultimedia")', data);
                    unitlife.site.dialog.invoqResultCallback('REG_TIMELINEMULTIMEDIA');
                },
                null
                );
            }
            return false;
        });

        unitlife.ui.SelectedValue('#@Html.IdFor(x => x.Type)');

    });

</script>

